# Generated by Django 5.2.6 on 2025-10-10 12:05

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('core', '0003_alter_soapnote_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, db_index=True, help_text='Session identifier for tracking user sessions', max_length=40, null=True, verbose_name='Session Key')),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now, help_text='When the action occurred', verbose_name='Timestamp')),
                ('category', models.CharField(choices=[('authentication', 'Authentication'), ('user_management', 'User Management'), ('patient_management', 'Patient Management'), ('billing', 'Billing'), ('pharmacy', 'Pharmacy'), ('laboratory', 'Laboratory'), ('radiology', 'Radiology'), ('appointment', 'Appointment'), ('inpatient', 'Inpatient'), ('system', 'System'), ('security', 'Security'), ('data_access', 'Data Access'), ('admin_action', 'Administrative Action')], db_index=True, help_text='Category of the activity', max_length=50, verbose_name='Category')),
                ('action_type', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('view', 'View'), ('login', 'Login'), ('logout', 'Logout'), ('failed_login', 'Failed Login'), ('permission_denied', 'Permission Denied'), ('export', 'Export'), ('import', 'Import'), ('print', 'Print'), ('search', 'Search'), ('filter', 'Filter'), ('sort', 'Sort'), ('download', 'Download'), ('upload', 'Upload'), ('authorize', 'Authorize'), ('approve', 'Approve'), ('reject', 'Reject'), ('cancel', 'Cancel'), ('reschedule', 'Reschedule'), ('transfer', 'Transfer'), ('dispense', 'Dispense'), ('prescribe', 'Prescribe'), ('admit', 'Admit'), ('discharge', 'Discharge'), ('settle', 'Settle'), ('refund', 'Refund')], db_index=True, help_text='Type of action performed', max_length=50, verbose_name='Action Type')),
                ('description', models.TextField(help_text='Human-readable description of the action', verbose_name='Description')),
                ('object_id', models.PositiveIntegerField(blank=True, db_index=True, help_text='ID of the object that was acted upon', null=True, verbose_name='Object ID')),
                ('object_repr', models.CharField(blank=True, help_text='String representation of the object', max_length=255, null=True, verbose_name='Object Representation')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address from which the action was performed', null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, help_text='Browser/user agent information', null=True, verbose_name='User Agent')),
                ('request_method', models.CharField(blank=True, help_text='HTTP method (GET, POST, PUT, DELETE)', max_length=10, null=True, verbose_name='Request Method')),
                ('request_path', models.CharField(blank=True, help_text='URL path that was accessed', max_length=255, null=True, verbose_name='Request Path')),
                ('level', models.CharField(choices=[('debug', 'Debug'), ('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], db_index=True, default='info', help_text='Severity level of the log entry', max_length=20, verbose_name='Log Level')),
                ('success', models.BooleanField(db_index=True, default=True, help_text='Whether the action was successful', verbose_name='Success')),
                ('error_message', models.TextField(blank=True, help_text='Error message if the action failed', null=True, verbose_name='Error Message')),
                ('old_values', models.JSONField(blank=True, help_text='Previous values before the change', null=True, verbose_name='Old Values')),
                ('new_values', models.JSONField(blank=True, help_text='New values after the change', null=True, verbose_name='New Values')),
                ('changed_fields', models.JSONField(blank=True, help_text='List of fields that were changed', null=True, verbose_name='Changed Fields')),
                ('response_status_code', models.PositiveIntegerField(blank=True, help_text='HTTP response status code', null=True, verbose_name='Response Status Code')),
                ('response_time_ms', models.PositiveIntegerField(blank=True, help_text='Time taken to process the request in milliseconds', null=True, verbose_name='Response Time (ms)')),
                ('additional_data', models.JSONField(blank=True, help_text='Additional metadata about the action', null=True, verbose_name='Additional Data')),
                ('content_type', models.ForeignKey(blank=True, help_text='Type of object that was acted upon', null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype', verbose_name='Content Type')),
                ('user', models.ForeignKey(blank=True, help_text='User who performed the action', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activity_logs', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Activity Log',
                'verbose_name_plural': 'Activity Logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp', 'category'], name='core_activi_timesta_49f4a5_idx'), models.Index(fields=['user', 'timestamp'], name='core_activi_user_id_81b1f1_idx'), models.Index(fields=['action_type', 'timestamp'], name='core_activi_action__5424a6_idx'), models.Index(fields=['ip_address', 'timestamp'], name='core_activi_ip_addr_373528_idx'), models.Index(fields=['level', 'timestamp'], name='core_activi_level_a9e6f8_idx')],
            },
        ),
    ]
