# Generated by Django 5.2 on 2025-08-28 17:53

from django.db import migrations, models
import django.utils.timezone
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        ('pharmacy', '0009_medicalpack_packitem_packorder_and_more'),
    ]

    operations = [
        # Add fields to ActiveStoreInventory
        migrations.AddField(
            model_name='activestoreinventory',
            name='reorder_level',
            field=models.IntegerField(default=10, help_text='Minimum stock level before reorder is needed'),
        ),
        
        # Add fields to PackItem
        migrations.AddField(
            model_name='packitem',
            name='item_type',
            field=models.CharField(default='medication', max_length=20),
        ),
        migrations.AddField(
            model_name='packitem',
            name='usage_instructions',
            field=models.TextField(blank=True, help_text='Instructions for using this item', null=True),
        ),
        migrations.AddField(
            model_name='packitem',
            name='is_critical',
            field=models.BooleanField(default=False, help_text='Critical items cannot be substituted'),
        ),
        migrations.AddField(
            model_name='packitem',
            name='is_optional',
            field=models.BooleanField(default=False, help_text='Optional items can be omitted if unavailable'),
        ),
        migrations.AddField(
            model_name='packitem',
            name='order',
            field=models.IntegerField(default=0, help_text='Order of usage in procedure (0 for no specific order)'),
        ),
        
        # Add fields to PackOrder
        migrations.AddField(
            model_name='packorder',
            name='order_notes',
            field=models.TextField(blank=True, help_text='Additional notes about this pack order', null=True),
        ),
        migrations.AddField(
            model_name='packorder',
            name='scheduled_date',
            field=models.DateTimeField(blank=True, help_text='When the pack is needed', null=True),
        ),
        
        # Add fields to PrescriptionItem
        migrations.AddField(
            model_name='prescriptionitem',
            name='dosage',
            field=models.CharField(blank=True, help_text='Dosage instructions (e.g., 500mg, 10ml)', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='prescriptionitem',
            name='frequency',
            field=models.CharField(blank=True, help_text='How often to take (e.g., twice daily, once daily)', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='prescriptionitem',
            name='duration',
            field=models.CharField(blank=True, help_text='How long to take (e.g., 7 days, 2 weeks)', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='prescriptionitem',
            name='instructions',
            field=models.TextField(blank=True, help_text='Special instructions for taking the medication', null=True),
        ),
        
        # Create new models
        migrations.CreateModel(
            name='Dispensary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=models.SET_NULL, related_name='managed_dispensaries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Dispensaries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BulkStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('location', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('capacity', models.IntegerField(help_text='Maximum storage capacity in units')),
                ('temperature_controlled', models.BooleanField(default=False)),
                ('humidity_controlled', models.BooleanField(default=False)),
                ('security_level', models.CharField(choices=[('basic', 'Basic'), ('medium', 'Medium'), ('high', 'High')], default='basic', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ActiveStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('capacity', models.IntegerField(help_text='Maximum storage capacity in units')),
                ('temperature_controlled', models.BooleanField(default=False)),
                ('humidity_controlled', models.BooleanField(default=False)),
                ('security_level', models.CharField(choices=[('basic', 'Basic'), ('medium', 'Medium'), ('high', 'High')], default='basic', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dispensary', models.OneToOneField(on_delete=models.CASCADE, related_name='active_store', to='pharmacy.dispensary')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MedicationInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_quantity', models.IntegerField(default=0)),
                ('reorder_level', models.IntegerField(default=10)),
                ('last_restock_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dispensary', models.ForeignKey(on_delete=models.CASCADE, related_name='medications', to='pharmacy.dispensary')),
                ('medication', models.ForeignKey(on_delete=models.CASCADE, related_name='inventories', to='pharmacy.medication')),
            ],
        ),
        migrations.CreateModel(
            name='BulkStoreInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(max_length=50)),
                ('stock_quantity', models.IntegerField(default=0)),
                ('expiry_date', models.DateField()),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('purchase_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bulk_store', models.ForeignKey(on_delete=models.CASCADE, related_name='inventories', to='pharmacy.bulkstore')),
                ('medication', models.ForeignKey(on_delete=models.CASCADE, related_name='bulk_inventories', to='pharmacy.medication')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=models.SET_NULL, to='pharmacy.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='ActiveStoreInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(max_length=50)),
                ('stock_quantity', models.IntegerField(default=0)),
                ('expiry_date', models.DateField()),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('last_restock_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active_store', models.ForeignKey(on_delete=models.CASCADE, related_name='inventories', to='pharmacy.activestore')),
                ('medication', models.ForeignKey(on_delete=models.CASCADE, related_name='active_inventories', to='pharmacy.medication')),
            ],
        ),
        migrations.CreateModel(
            name='MedicationTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('batch_number', models.CharField(blank=True, max_length=50, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_transit', 'In Transit'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('transferred_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET_NULL, related_name='approved_transfers', to=settings.AUTH_USER_MODEL)),
                ('from_bulk_store', models.ForeignKey(on_delete=models.CASCADE, related_name='outgoing_transfers', to='pharmacy.bulkstore')),
                ('medication', models.ForeignKey(on_delete=models.CASCADE, related_name='transfers', to='pharmacy.medication')),
                ('requested_by', models.ForeignKey(null=True, on_delete=models.SET_NULL, related_name='requested_transfers', to=settings.AUTH_USER_MODEL)),
                ('to_active_store', models.ForeignKey(on_delete=models.CASCADE, related_name='incoming_transfers', to='pharmacy.activestore')),
                ('transferred_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET_NULL, related_name='executed_transfers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DispensaryTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('batch_number', models.CharField(blank=True, max_length=50, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('unit_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_transit', 'In Transit'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('transferred_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET_NULL, related_name='approved_dispensary_transfers', to=settings.AUTH_USER_MODEL)),
                ('from_active_store', models.ForeignKey(on_delete=models.CASCADE, related_name='outgoing_dispensary_transfers', to='pharmacy.activestore')),
                ('medication', models.ForeignKey(on_delete=models.CASCADE, related_name='dispensary_transfers', to='pharmacy.medication')),
                ('requested_by', models.ForeignKey(null=True, on_delete=models.SET_NULL, related_name='requested_dispensary_transfers', to=settings.AUTH_USER_MODEL)),
                ('to_dispensary', models.ForeignKey(on_delete=models.CASCADE, related_name='incoming_dispensary_transfers', to='pharmacy.dispensary')),
                ('transferred_by', models.ForeignKey(blank=True, null=True, on_delete=models.SET_NULL, related_name='executed_dispensary_transfers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DispensingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dispensed_quantity', models.IntegerField()),
                ('dispensed_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('unit_price_at_dispense', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_price_for_this_log', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('dispensary', models.ForeignKey(blank=True, null=True, on_delete=models.SET_NULL, related_name='dispensing_logs', to='pharmacy.dispensary')),
                ('dispensed_by', models.ForeignKey(null=True, on_delete=models.SET_NULL, related_name='dispensing_actions', to=settings.AUTH_USER_MODEL)),
                ('prescription_item', models.ForeignKey(on_delete=models.CASCADE, related_name='dispensing_logs', to='pharmacy.prescriptionitem')),
            ],
            options={
                'verbose_name': 'Dispensing Log',
                'verbose_name_plural': 'Dispensing Logs',
                'ordering': ['-dispensed_date'],
            },
        ),
        migrations.CreateModel(
            name='MedicalPack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('pack_type', models.CharField(choices=[('surgery', 'Surgery'), ('labor', 'Labor/Delivery'), ('emergency', 'Emergency'), ('routine', 'Routine Care')], max_length=20)),
                ('surgery_type', models.CharField(blank=True, choices=[('appendectomy', 'Appendectomy'), ('cholecystectomy', 'Cholecystectomy'), ('hernia_repair', 'Hernia Repair'), ('cesarean_section', 'Cesarean Section'), ('tonsillectomy', 'Tonsillectomy')], max_length=50, null=True)),
                ('labor_type', models.CharField(blank=True, choices=[('normal_delivery', 'Normal Delivery'), ('assisted_delivery', 'Assisted Delivery'), ('cesarean_section', 'Cesarean Section')], max_length=50, null=True)),
                ('risk_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('requires_approval', models.BooleanField(default=False, help_text='Check if this pack requires approval before processing')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Medical Pack',
                'verbose_name_plural': 'Medical Packs',
                'ordering': ['name'],
            },
        ),
    ]